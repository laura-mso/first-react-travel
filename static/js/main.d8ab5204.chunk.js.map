{"version":3,"sources":["logo.svg","components/Button.js","components/travellocation.js","components/SimpsonsAPI.js","components/GenerateQuote.js","components/Home.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","setState","on","state","travelling","react_default","a","createElement","Fragment","className","src","logo","alt","onClick","Component","locations","destination","country","photo","distance","Location","map","index","id","key","SimpsonsAPI","_ref","quotes","isLoaded","image","quote","character","GenerateQuote","getQuote","Home","selectQuote","bind","assertThisInitialized","_this2","fetch","then","res","json","Button_Button","travellocation","components_SimpsonsAPI","components_GenerateQuote","Contact","react_router_dom","to","App","exact","activeClassName","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8ab5204.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport logo from \"../logo.svg\";\nimport \"../App.css\";\n\nexport default class Button extends Component {\n  constructor(props) {\n    super(props);\n    // this.addSpinningClass = this.addSpinningClass.bind(this);\n    this.state = {\n      on: this.props.on\n    };\n  }\n  handleClick = () => {\n    this.setState({ on: !this.state.on });\n  };\n  render() {\n    const travelling = this.state.on\n      ? \"Currently travelling :)\"\n      : \"Currently in Berlin\";\n    return (\n      <React.Fragment>\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Laura's Travels</h1>\n          <img\n            src={logo}\n            className={this.state.on ? \"App-logo\" : \"App-logo-slow\"}\n            alt=\"logo\"\n          />\n        </header>\n\n        <h2>{travelling}</h2>\n\n        <div className=\"Button\">\n          <button onClick={this.handleClick} className={travelling}>\n            Switch status\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../App.css\";\n\nconst locations = [\n  {\n    destination: \"Sunwaves Festival (Mamaia)\",\n    country: \"Romania\",\n    photo:\n      \"https://scontent.ffra1-1.fna.fbcdn.net/v/t1.0-9/31727846_10216616021338557_7283916495636135936_o.jpg?_nc_cat=106&_nc_eui2=AeGx9w2ZvDo2dY-YfUiGPdfh_TjtSwG0_ZWbV5cqVImQdTDq5EfthipTb4ACUEQt3kphvXcBbWBfBgF1qrFhHk3Ajqk9QWHY1qvbkTHsO24NhA&_nc_ht=scontent.ffra1-1.fna&oh=d3130c6383a0723eb8d4f15e3c6fc684&oe=5D340494\",\n    distance: \"1900\"\n  },\n  {\n    destination: \"Off-Sonar (Barcelona)\",\n    country: \"Spain\",\n    photo:\n      \"https://scontent.ffra1-1.fna.fbcdn.net/v/t31.0-8/19144167_1585129298163767_8216604057020465419_o.jpg?_nc_cat=103&_nc_eui2=AeHhpBq5QhGe4lohWIuclbJmqw4KEaoSIxUgsD9WuuTpSeMHo4IcUxnACjXpzTAHKSlleluOK7f916OVY0V5cUN3eSuztzg7fDA_qKV25d8YCw&_nc_ht=scontent.ffra1-1.fna&oh=9f6f1962d7582113164939c0434ddf81&oe=5D3FAABF\",\n    distance: \"1800\"\n  },\n  {\n    destination: \"Dimensions (Pula)\",\n    country: \"Croatia\",\n    photo:\n      \"https://scontent.ffra1-1.fna.fbcdn.net/v/t1.0-9/41320074_10217740660287508_9047793086599528448_n.jpg?_nc_cat=109&_nc_eui2=AeFz24XbUrN15MftW5nR7iVNZxN9C0DDx_SBPgA2Tw1hHMUpY1qyaTjmyr_k565JIBsr0jI5xBsqooq_Uu9Z3xWs_TbvL7PoMpvhvv8tIg4Weg&_nc_ht=scontent.ffra1-1.fna&oh=3f292136add482145c57f42521c5b268&oe=5D378ABE\",\n    distance: \"1100\"\n  },\n  {\n    destination: \"Something Slow Picnic & Open Air (Berlin)\",\n    country: \"Germany\",\n    photo:\n      \"https://scontent.ffra1-1.fna.fbcdn.net/v/t1.0-9/38926452_10217514472632958_7195928455580483584_n.jpg?_nc_cat=102&_nc_eui2=AeHtTWYF7eGIvtP34WuZGyHI-jK40TTMX-xQfuS0S3G4ZnQ86-q563yXRTx0KJspXadKvS4QWN8wX21_c0B_4eoOVSJF6BnffHOSB8NYGPrjfA&_nc_ht=scontent.ffra1-1.fna&oh=f5988507124a12bd56b6b955e1497557&oe=5D049351\",\n    distance: \"0\"\n  },\n  {\n    destination: \"Uferlos (Basel)\",\n    country: \"Switzerland\",\n    photo:\n      \"https://scontent.ffra1-1.fna.fbcdn.net/v/t1.0-9/1558472_10203543156478786_1098379979_n.jpg?_nc_cat=105&_nc_eui2=AeHpFW9uEuQYuEedGaFfZZIb8WldL-DuOknWIxUYBSIHZnSqa-Ie-xXMsqRattQEux90i8gXJRtGXQRCvDpoou542RjEPeGSS1lS7wyp_60cbA&_nc_ht=scontent.ffra1-1.fna&oh=6ae576f76fb1af903ca90588c26bd593&oe=5D3B7096\",\n    distance: \"800\"\n  }\n];\n\nconst Location = () => (\n  <div>\n    {locations.map((locations, index) => (\n      <React.Fragment>\n        <hr id=\"Line\" />\n        <h2 key={index}>{locations.destination}</h2>\n        <h3>{locations.country}</h3>\n        <img\n          className=\"travelphoto\"\n          src={locations.photo}\n          alt={locations.destination}\n        />\n        <p>{locations.distance} km from Berlin</p>\n      </React.Fragment>\n    ))}\n  </div>\n  // <h3>{country}</h3>\n  // <img src={photo} alt={destination} />\n  // <p>{distance} km from Berlin</p>\n  // <hr />\n);\n\nexport default Location;\n","import React from \"react\";\n\nconst SimpsonsAPI = ({ quotes, isLoaded }) => {\n  return (\n    <div className=\"DisplayQuote\">\n      <hr id=\"hrfooter\" />\n      <div>\n        <h3 className=\"h3simpsons\">Random Simpsons Quotes</h3>\n        <img className=\"simpsonsimage\" src={quotes.image} alt=\"\" />\n        <h5>{quotes.quote}</h5>\n        <p>{quotes.character}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SimpsonsAPI;\n","import React from \"react\";\n\nconst GenerateQuote = ({ getQuote }) => {\n  return (\n    <div className=\"GenerateQuote\">\n      <button className=\"Button\" onClick={getQuote}>\n        Get a new quote\n      </button>\n    </div>\n  );\n};\nexport default GenerateQuote;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport Button from \"./Button\";\nimport Location from \"./travellocation\";\nimport SimpsonsAPI from \"./SimpsonsAPI\";\nimport GenerateQuote from \"./GenerateQuote\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: {}\n    };\n    this.selectQuote = this.selectQuote.bind(this);\n  }\n\n  selectQuote() {\n    fetch(\"https://thesimpsonsquoteapi.glitch.me/quotes\")\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          quotes: json[0]\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.selectQuote();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Button />\n        <div className=\"Travelsection\">\n          <Location />\n        </div>\n        <SimpsonsAPI quotes={this.state.quotes} />\n        <GenerateQuote getQuote={this.selectQuote} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Contact extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Contact</h1>\n        <h2>This page is currently in progress</h2>\n        <Link to=\"/wcs-first-react-travel/\" className=\"homepagelink\">\n          {\" \"}\n          Back to homepage\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter, Switch, NavLink } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Contact from \"./components/Contact\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"navigation\">\n          <NavLink\n            exact\n            to=\"/wcs-first-react-travel/\"\n            activeClassName=\"navactive\"\n          >\n            {\" \"}\n            Home{\" \"}\n          </NavLink>\n          <NavLink to=\"/contact\" activeClassName=\"navactive\">\n            {\" \"}\n            Contact{\" \"}\n          </NavLink>\n        </div>\n        <div>\n          <Switch>\n            <Route path=\"/wcs-first-react-travel/\" component={Home} />\n            <Route path=\"/contact\" component={Contact} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}